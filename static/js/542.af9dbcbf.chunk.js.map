{"version":3,"file":"static/js/542.af9dbcbf.chunk.js","mappings":"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","sources":["components/Buildings/BuildingStats/BuildingStats.jsx","components/Buildings/BuildingDetails/BuildingDetails.jsx","components/Buildings/BuildingModal/BuildingModal.jsx","components/Buildings/BuildingsGallery/BuildingsGallery.jsx","data/buildings/confederationBuildings.js","pages/BuildingsPage/ConfBuildingsPage/ConfBuildingsPage.jsx"],"sourcesContent":["import hp from '../../../images/icons/heart.png';\r\nimport speed from '../../../images/icons/arrow-right.png';\r\nimport view from '../../../images/icons/eye.png';\r\nimport cost from '../../../images/icons/3d.png';\r\nimport time from '../../../images/icons/time.png';\r\n\r\nimport styles from '../../UnitStats/UnitStats.module.scss';\r\n\r\nconst BuildingStats = ({ building, selectedLevelData }) => {\r\n  return (\r\n    <>\r\n      <div className={styles.unitStats}>\r\n        <div className={styles.statItem}>\r\n          <span className={styles.statLabel}>HP:</span>\r\n          <span className={styles.statValue}>\r\n            <img src={hp} alt=\"hp\" className={styles.statIcon} />\r\n            {selectedLevelData.hp}{' '}\r\n          </span>\r\n        </div>\r\n        <div className={styles.statItem}>\r\n          <span className={styles.statLabel}>Armor:</span>\r\n          <span className={styles.statValue}>\r\n            <img\r\n              src={building.iconArmor}\r\n              alt=\"armor\"\r\n              className={styles.statIcon}\r\n            />\r\n            {selectedLevelData.armor}\r\n          </span>\r\n        </div>\r\n        <div className={styles.statItem}>\r\n          <span className={styles.statLabel}>Energy:</span>\r\n          <span className={styles.statValue}>\r\n            <img src={speed} alt=\"energy\" className={styles.statIcon} />\r\n            {selectedLevelData.energy}\r\n          </span>\r\n        </div>\r\n        <div className={styles.statItem}>\r\n          <span className={styles.statLabel}>Size:</span>\r\n          <span className={styles.statValue}>\r\n            <img src={view} alt=\"size\" className={styles.statIcon} />\r\n            {selectedLevelData.size}\r\n          </span>\r\n        </div>\r\n        <div className={styles.statItem}>\r\n          <span className={styles.statLabel}>Cost:</span>\r\n          <span className={styles.statValue}>\r\n            <img src={cost} alt=\"cost\" className={styles.statIcon} />\r\n            {selectedLevelData.cost}{' '}\r\n          </span>\r\n        </div>\r\n        <div className={styles.statItem}>\r\n          <span className={styles.statLabel}>Time:</span>\r\n          <span className={styles.statValue}>\r\n            <img src={time} alt=\"time\" className={styles.statIcon} />\r\n            {selectedLevelData.time}{' '}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BuildingStats;\r\n","import { useState } from 'react';\r\nimport styles from '../../Unit/UnitDetails.module.scss';\r\nimport BuildingStats from '../BuildingStats/BuildingStats';\r\nimport UnitWeapons from 'components/UnitWeapons/UnitWeapons';\r\n\r\nconst BuildingsDetails = ({ building }) => {\r\n  const [selectedLevel, setSelectedLevel] = useState(1);\r\n\r\n  const handleLevelChange = event => {\r\n    setSelectedLevel(parseInt(event.target.value, 10));\r\n  };\r\n\r\n  const selectedLevelData = building.levels.find(\r\n    level => level.level === selectedLevel\r\n  );\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.leftSection}>\r\n        <h2 className={styles.unitName}>{building.name}</h2>\r\n        <img\r\n          src={building.image}\r\n          alt={building.name}\r\n          className={styles.selectedImage}\r\n        />\r\n        <div className={styles.unitDescription}>\r\n          <p>{building.description}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={styles.rightSection}>\r\n        <label htmlFor=\"levelSelect\" className={styles.levelSelectLabel}>\r\n          Select Level:{' '}\r\n        </label>\r\n        <select\r\n          id=\"levelSelect\"\r\n          value={selectedLevel}\r\n          onChange={handleLevelChange}\r\n          className={styles.levelSelect}\r\n        >\r\n          {building.levels.map(level => (\r\n            <option key={level.level} value={level.level}>\r\n              Level {level.level}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        {selectedLevelData && (\r\n          <BuildingStats\r\n            selectedLevelData={selectedLevelData}\r\n            building={building}\r\n          />\r\n        )}\r\n        {building.weapons && (\r\n          <UnitWeapons\r\n            selectedLevelData={selectedLevelData}\r\n            weapons={building.weapons}\r\n          />\r\n        )}\r\n\r\n        <div className={styles.unitDescriptionMobile}>\r\n          <p>{building.description}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildingsDetails;\r\n","import SvgIcon from 'components/SvgIcon/SvgIcon';\r\nimport styles from '../../UnitModal/UnitModal.module.scss';\r\nimport BuildingDetails from '../BuildingDetails/BuildingDetails';\r\n\r\nconst BuildingModal = ({\r\n  buildings,\r\n  selectedIndex,\r\n  onClose,\r\n  onPrevious,\r\n  onNext,\r\n}) => {\r\n  const building = buildings[selectedIndex];\r\n\r\n  return (\r\n    <div className={styles.modal}>\r\n      <button className={styles.closeButton} type=\"button\" onClick={onClose}>\r\n        <SvgIcon className={styles.iconClose} iconId=\"icon-close\" />\r\n      </button>\r\n      <button\r\n        className={`${styles.navButton} ${styles.prevButton}`}\r\n        type=\"button\"\r\n        onClick={onPrevious}\r\n      >\r\n        <SvgIcon className={styles.iconNav} iconId=\"icon-previous\" />\r\n      </button>\r\n\r\n      <BuildingDetails building={building} />\r\n\r\n      <button\r\n        className={`${styles.navButton} ${styles.nextButton}`}\r\n        type=\"button\"\r\n        onClick={onNext}\r\n      >\r\n        <SvgIcon className={styles.iconNav} iconId=\"icon-next\" />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildingModal;\r\n","import { useState } from 'react';\r\nimport styles from '../../UnitsGallery/UnitsGallery.module.scss';\r\nimport BuildingModal from '../BuildingModal/BuildingModal';\r\n\r\nconst BuildingsGallery = ({ buildings }) => {\r\n  const [selectedBuilding, setSelectedBuilding] = useState(null);\r\n\r\n  const handleBuildingClick = index => {\r\n    setSelectedBuilding(index);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setSelectedBuilding(null);\r\n  };\r\n\r\n  const goToNext = () => {\r\n    setSelectedBuilding(prevIndex =>\r\n      prevIndex === buildings.length - 1 ? 0 : prevIndex + 1\r\n    );\r\n  };\r\n\r\n  const goToPrevious = () => {\r\n    setSelectedBuilding(prevIndex =>\r\n      prevIndex === 0 ? buildings.length - 1 : prevIndex - 1\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={styles.gallery}>\r\n      {buildings.map((building, index) => (\r\n        <div\r\n          onClick={() => handleBuildingClick(index)}\r\n          key={building.id}\r\n          className={styles.item}\r\n        >\r\n          <h3 className={styles.title}>{building.name}</h3>\r\n          <img\r\n            src={building.image}\r\n            alt={building.name}\r\n            className={styles.image}\r\n          />\r\n        </div>\r\n      ))}\r\n      {selectedBuilding !== null && (\r\n        <BuildingModal\r\n          buildings={buildings}\r\n          selectedIndex={selectedBuilding}\r\n          onClose={closeModal}\r\n          onPrevious={goToPrevious}\r\n          onNext={goToNext}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildingsGallery;\r\n","import assault from '../../images/units/confederation/assault.png';\r\n\r\nimport armor1 from '../../images/icons/armor1.png';\r\n// import armor2 from '../../images/icons/armor2.png';\r\n// import armor3 from '../../images/icons/armor3.png';\r\n\r\nexport const confederationBuildings = [\r\n  // headquarters\r\n  {\r\n    id: 1,\r\n    name: 'Headquarters',\r\n    image: assault,\r\n    iconArmor: armor1,\r\n    description: 'Description for Building',\r\n    weapons: null,\r\n    levels: [\r\n      // 1\r\n      {\r\n        level: 1,\r\n        hp: 0,\r\n        armor: 0,\r\n        energy: 0,\r\n        size: 0,\r\n        cost: 0,\r\n        time: 0,\r\n        weapons: null,\r\n        produces: [\r\n          { type: 'Gold', amount: 10, icon: assault },\r\n          { type: 'Wood', amount: 20, icon: assault },\r\n          { type: 'Food', amount: 30, icon: assault },\r\n        ],\r\n      },\r\n      // 2\r\n      {\r\n        level: 2,\r\n        hp: 0,\r\n        armor: 0,\r\n        energy: 0,\r\n        size: 0,\r\n        cost: 0,\r\n        time: 0,\r\n        weapons: null,\r\n        produces: [\r\n          { type: 'Gold', amount: 10, icon: assault },\r\n          { type: 'Wood', amount: 20, icon: assault },\r\n          { type: 'Food', amount: 30, icon: assault },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Rocket',\r\n    image: assault,\r\n    iconArmor: armor1,\r\n    description: 'Description for Building',\r\n    weapons: [{ type: 'Air Bomb' }],\r\n    levels: [\r\n      // 1\r\n      {\r\n        level: 1,\r\n        hp: 0,\r\n        armor: 0,\r\n        energy: 0,\r\n        size: 0,\r\n        cost: 0,\r\n        time: 0,\r\n        produces: null,\r\n        weapons: [\r\n          {\r\n            damageArmor1: 0,\r\n            damageArmor2: 0,\r\n            damageArmor3: 0,\r\n            firingRange: 0,\r\n            rateOfFire: 0,\r\n            firingAccuracy: 0,\r\n            firingAccuracy2: 0,\r\n            explosionRadius: 0,\r\n          },\r\n        ],\r\n      },\r\n      // 2\r\n      {\r\n        level: 2,\r\n        hp: 0,\r\n        armor: 0,\r\n        energy: 0,\r\n        size: 0,\r\n        cost: 0,\r\n        time: 0,\r\n        produces: null,\r\n        weapons: [\r\n          {\r\n            damageArmor1: 0,\r\n            damageArmor2: 0,\r\n            damageArmor3: 0,\r\n            firingRange: 0,\r\n            rateOfFire: 0,\r\n            firingAccuracy: 0,\r\n            firingAccuracy2: 0,\r\n            explosionRadius: 0,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import BuildingsGallery from 'components/Buildings/BuildingsGallery/BuildingsGallery';\r\nimport { confederationBuildings } from 'data/buildings/confederationBuildings';\r\n\r\nconst ConfBuildingsPage = () => {\r\n  return (\r\n    <>\r\n      <BuildingsGallery buildings={confederationBuildings} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ConfBuildingsPage;\r\n"],"names":["_ref","building","selectedLevelData","_jsx","_Fragment","children","_jsxs","className","styles","src","hp","alt","iconArmor","armor","speed","energy","view","size","cost","time","_useState","useState","_useState2","_slicedToArray","selectedLevel","setSelectedLevel","levels","find","level","name","image","description","htmlFor","id","value","onChange","event","parseInt","target","map","BuildingStats","weapons","UnitWeapons","buildings","selectedIndex","onClose","onPrevious","onNext","type","onClick","SvgIcon","iconId","concat","BuildingDetails","selectedBuilding","setSelectedBuilding","index","handleBuildingClick","BuildingModal","prevIndex","length","confederationBuildings","assault","armor1","produces","amount","icon","damageArmor1","damageArmor2","damageArmor3","firingRange","rateOfFire","firingAccuracy","firingAccuracy2","explosionRadius","BuildingsGallery"],"sourceRoot":""}