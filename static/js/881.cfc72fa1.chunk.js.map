{"version":3,"file":"static/js/881.cfc72fa1.chunk.js","mappings":"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","sources":["webpack://art-of-war/./src/components/ImageModal/ImageModal.module.scss?4b4a","components/ImageModal/ImageModal.jsx","webpack://art-of-war/./src/components/Gallery/Gallery.module.scss?8938","components/Gallery/Gallery.jsx","webpack://art-of-war/./src/components/MapSelector/MapSelector.module.scss?f5ac","components/MapSelector/MapSelector.jsx","data/maps/desert.js","pages/MapsPage/DesertPage/DesertPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"ImageModal_modal__cJjZj\",\"imageTitle\":\"ImageModal_imageTitle__eTmle\",\"selectedImage\":\"ImageModal_selectedImage__WTzqQ\",\"closeButton\":\"ImageModal_closeButton__7rcyc\",\"iconClose\":\"ImageModal_iconClose__MhN1x\",\"navButton\":\"ImageModal_navButton__+pn1+\",\"prevButton\":\"ImageModal_prevButton__GyXB9\",\"nextButton\":\"ImageModal_nextButton__yOeVd\",\"iconNav\":\"ImageModal_iconNav__Ofg3z\"};","import { useTranslation } from 'react-i18next';\r\n\r\nimport SvgIcon from 'components/SvgIcon/SvgIcon';\r\nimport styles from './ImageModal.module.scss';\r\n\r\nconst ImageModal = ({ images, selectedIndex, onClose, onPrevious, onNext }) => {\r\n  const { t } = useTranslation();\r\n  const getImageSrc = image => {\r\n    return typeof image === 'string' ? image : image.image;\r\n  };\r\n\r\n  const getImageTitle = image => {\r\n    return typeof image === 'string' ? '' : t(image.title);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.modal}>\r\n      <button className={styles.closeButton} type=\"button\" onClick={onClose}>\r\n        <SvgIcon className={styles.iconClose} iconId=\"icon-close\" />\r\n      </button>\r\n      <button\r\n        className={`${styles.navButton} ${styles.prevButton}`}\r\n        type=\"button\"\r\n        onClick={onPrevious}\r\n      >\r\n        <SvgIcon className={styles.iconNav} iconId=\"icon-previous\" />\r\n      </button>\r\n\r\n      {getImageTitle(images[selectedIndex]) && (\r\n        <h2 className={styles.imageTitle}>\r\n          {getImageTitle(images[selectedIndex])}\r\n        </h2>\r\n      )}\r\n\r\n      <img\r\n        src={getImageSrc(images[selectedIndex])}\r\n        alt={getImageTitle(images[selectedIndex])}\r\n        className={styles.selectedImage}\r\n      />\r\n\r\n      <button\r\n        className={`${styles.navButton} ${styles.nextButton}`}\r\n        type=\"button\"\r\n        onClick={onNext}\r\n      >\r\n        <SvgIcon className={styles.iconNav} iconId=\"icon-next\" />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageModal;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"gallery\":\"Gallery_gallery__icp4L\",\"image\":\"Gallery_image__5NDH1\"};","import { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport ImageModal from 'components/ImageModal/ImageModal';\r\nimport styles from './Gallery.module.scss';\r\n\r\nconst Gallery = ({ images }) => {\r\n  const { t } = useTranslation();\r\n  const [selectedIndex, setSelectedIndex] = useState(null);\r\n\r\n  const openImage = index => {\r\n    setSelectedIndex(index);\r\n  };\r\n\r\n  const closeImage = () => {\r\n    setSelectedIndex(null);\r\n  };\r\n\r\n  const goToNext = () => {\r\n    setSelectedIndex(prevIndex =>\r\n      prevIndex === images.length - 1 ? 0 : prevIndex + 1\r\n    );\r\n  };\r\n\r\n  const goToPrevious = () => {\r\n    setSelectedIndex(prevIndex =>\r\n      prevIndex === 0 ? images.length - 1 : prevIndex - 1\r\n    );\r\n  };\r\n\r\n  const getImageSrc = image => {\r\n    return typeof image === 'string' ? image : image.image;\r\n  };\r\n\r\n  return (\r\n    <div className={styles.gallery}>\r\n      {images.map((image, index) => (\r\n        <img\r\n          key={index}\r\n          src={getImageSrc(image)}\r\n          alt={typeof image === 'string' ? 'avatar' : t(image.title)}\r\n          onClick={() => openImage(index)}\r\n          className={styles.image}\r\n        />\r\n      ))}\r\n      {selectedIndex !== null && (\r\n        <ImageModal\r\n          images={images}\r\n          selectedIndex={selectedIndex}\r\n          onClose={closeImage}\r\n          onPrevious={goToPrevious}\r\n          onNext={goToNext}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"selectWrapper\":\"MapSelector_selectWrapper__ZhLtS\"};","import { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport styles from './MapSelector.module.scss';\r\n\r\nconst MapSelector = ({ maps, onSelectMap }) => {\r\n  const { t } = useTranslation();\r\n  const [selectedMap, setSelectedMap] = useState('');\r\n\r\n  const handleMapChange = e => {\r\n    const mapTitle = e.target.value;\r\n    setSelectedMap(mapTitle);\r\n    onSelectMap(mapTitle);\r\n  };\r\n\r\n  const handleResetSelection = () => {\r\n    setSelectedMap('');\r\n    onSelectMap('');\r\n  };\r\n\r\n  return (\r\n    <div className={styles.selectWrapper}>\r\n      <select value={selectedMap} onChange={handleMapChange}>\r\n        <option value=\"\">{t('maps.selectMap')}</option>\r\n        {maps.map((map, index) => (\r\n          <option key={index} value={t(map.title)}>\r\n            {t(map.title)}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {selectedMap && (\r\n        <button onClick={handleResetSelection}>{t('maps.clearFilter')}</button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapSelector;\r\n","export const desertMaps = [\r\n  {\r\n    title: 'maps.desertMaps.areaOfScavengers',\r\n    image:\r\n      'https://res.cloudinary.com/dsy8hantq/image/upload/v1727342062/area-of-scavengers_xu2gx0.webp',\r\n  },\r\n  {\r\n    title: 'maps.desertMaps.aWrongWayTurn',\r\n    image:\r\n      'https://res.cloudinary.com/dsy8hantq/image/upload/v1727342064/a-wrong-way-turn_o3wphp.webp',\r\n  },\r\n  {\r\n    title: 'maps.desertMaps.bloodyShore',\r\n    image:\r\n      'https://res.cloudinary.com/dsy8hantq/image/upload/v1727342066/bloody-shore_upavqk.webp',\r\n  },\r\n  {\r\n    title: 'maps.desertMaps.caesarsIslands',\r\n    image:\r\n      'https://res.cloudinary.com/dsy8hantq/image/upload/v1727342067/caesars-islands_cogjpk.webp',\r\n  },\r\n  {\r\n    title: 'maps.desertMaps.coralBay',\r\n    image:\r\n      'https://res.cloudinary.com/dsy8hantq/image/upload/v1727342069/coral-bay_tdr2f0.webp',\r\n  },\r\n  {\r\n    title: 'maps.desertMaps.cryobase',\r\n    image:\r\n      'https://res.cloudinary.com/dsy8hantq/image/upload/v1727342071/cryobase_vavmhd.webp',\r\n  },\r\n  {\r\n    title: 'maps.desertMaps.deadlyCliff',\r\n    image:\r\n      'https://res.cloudinary.com/dsy8hantq/image/upload/v1727342073/deadly-cliff_vsobh1.webp',\r\n  },\r\n  {\r\n    title: 'maps.desertMaps.desertCross',\r\n    image:\r\n      'https://res.cloudinary.com/dsy8hantq/image/upload/v1727342035/desert-cross_dqxseg.webp',\r\n  },\r\n  {\r\n    title: 'maps.desertMaps.desertTreasure',\r\n    image:\r\n      'https://res.cloudinary.com/dsy8hantq/image/upload/v1727342035/desert-treasure_kie5yf.webp',\r\n  },\r\n  {\r\n    title: 'maps.desertMaps.difficultChoice',\r\n    image:\r\n      'https://res.cloudinary.com/dsy8hantq/image/upload/v1727342036/difficult-choice_pkdped.webp',\r\n  },\r\n  {\r\n    title: 'maps.desertMaps.grandCanyon',\r\n    image:\r\n      'https://res.cloudinary.com/dsy8hantq/image/upload/v1727342038/grand-canyon_psjysr.webp',\r\n  },\r\n  {\r\n    title: 'maps.desertMaps.inferno',\r\n    image:\r\n      'https://res.cloudinary.com/dsy8hantq/image/upload/v1727342039/inferno_tvtkdf.webp',\r\n  },\r\n  {\r\n    title: 'maps.desertMaps.mountainRoad',\r\n    image:\r\n      'https://res.cloudinary.com/dsy8hantq/image/upload/v1727342041/mountain-road_djlr3a.webp',\r\n  },\r\n  {\r\n    title: 'maps.desertMaps.noTrace',\r\n    image:\r\n      'https://res.cloudinary.com/dsy8hantq/image/upload/v1727342042/no-trace_f97kxb.webp',\r\n  },\r\n  {\r\n    title: 'maps.desertMaps.sandyBay',\r\n    image:\r\n      'https://res.cloudinary.com/dsy8hantq/image/upload/v1727342043/sandy-bay_bndtrg.webp',\r\n  },\r\n  {\r\n    title: 'maps.desertMaps.simoom',\r\n    image:\r\n      'https://res.cloudinary.com/dsy8hantq/image/upload/v1727342045/simoom_zjjgwc.webp',\r\n  },\r\n  {\r\n    title: 'maps.desertMaps.suezCanal',\r\n    image:\r\n      'https://res.cloudinary.com/dsy8hantq/image/upload/v1727342046/suez-canal_wrdnmh.webp',\r\n  },\r\n  {\r\n    title: 'maps.desertMaps.theAbandonedOasis',\r\n    image:\r\n      'https://res.cloudinary.com/dsy8hantq/image/upload/v1727342048/the-abandoned-oasis_twofvw.webp',\r\n  },\r\n  {\r\n    title: 'maps.desertMaps.theCanyon',\r\n    image:\r\n      'https://res.cloudinary.com/dsy8hantq/image/upload/v1727342049/the-canyon_qzknid.webp',\r\n  },\r\n  {\r\n    title: 'maps.desertMaps.thePass',\r\n    image:\r\n      'https://res.cloudinary.com/dsy8hantq/image/upload/v1727342051/the-pass_ngcndf.webp',\r\n  },\r\n  {\r\n    title: 'maps.desertMaps.theSilkRoad',\r\n    image:\r\n      'https://res.cloudinary.com/dsy8hantq/image/upload/v1727342052/the-silk-road_omkrrz.webp',\r\n  },\r\n  {\r\n    title: 'maps.desertMaps.thornyPath',\r\n    image:\r\n      'https://res.cloudinary.com/dsy8hantq/image/upload/v1727342054/thorny-path_klfn82.webp',\r\n  },\r\n  {\r\n    title: 'maps.desertMaps.twoMountains',\r\n    image:\r\n      'https://res.cloudinary.com/dsy8hantq/image/upload/v1727342055/two-mountains_e5td1y.webp',\r\n  },\r\n  {\r\n    title: 'maps.desertMaps.whirlwind',\r\n    image:\r\n      'https://res.cloudinary.com/dsy8hantq/image/upload/v1727342057/whirlwind_ge7bjm.webp',\r\n  },\r\n  {\r\n    title: 'maps.desertMaps.yawaraLake',\r\n    image:\r\n      'https://res.cloudinary.com/dsy8hantq/image/upload/v1727342058/yawara-lake_p13gf3.webp',\r\n  },\r\n  {\r\n    title: 'maps.desertMaps.yrinwyReservoir',\r\n    image:\r\n      'https://res.cloudinary.com/dsy8hantq/image/upload/v1727342061/yrinwy-reservoir_gsi6v1.webp',\r\n  },\r\n];\r\n","import { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport Gallery from 'components/Gallery/Gallery';\r\nimport MapSelector from 'components/MapSelector/MapSelector';\r\nimport { desertMaps } from 'data/maps/desert';\r\n\r\nconst DesertPage = () => {\r\n  const { t } = useTranslation();\r\n\r\n  const [filteredMaps, setFilteredMaps] = useState(desertMaps);\r\n\r\n  const handleSelectMap = mapTitle => {\r\n    if (mapTitle) {\r\n      const selectedMap = desertMaps.filter(map => t(map.title) === mapTitle);\r\n      setFilteredMaps(selectedMap);\r\n    } else {\r\n      setFilteredMaps(desertMaps);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <MapSelector maps={desertMaps} onSelectMap={handleSelectMap} />\r\n      <Gallery images={filteredMaps} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DesertPage;\r\n"],"names":["_ref","image","images","selectedIndex","onClose","onPrevious","onNext","t","useTranslation","getImageTitle","title","_jsxs","className","styles","children","_jsx","type","onClick","SvgIcon","iconId","concat","src","alt","_useState","useState","_useState2","_slicedToArray","setSelectedIndex","getImageSrc","map","index","openImage","ImageModal","prevIndex","length","maps","onSelectMap","selectedMap","setSelectedMap","value","onChange","e","mapTitle","target","desertMaps","filteredMaps","setFilteredMaps","_Fragment","MapSelector","filter","Gallery"],"sourceRoot":""}